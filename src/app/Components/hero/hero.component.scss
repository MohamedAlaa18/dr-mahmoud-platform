.hero {
  min-height: calc(85dvh);
}

.img-fluid {
  filter: drop-shadow(0 0 1rem var(--color1)) drop-shadow(0 1rem 1rem var(--color2));
  animation: anim 10s infinite;
}

.main-btn {
  color: var(--bg);
  background: var(--color2);
  scale: 1;
  transition: 0.3s;
  padding: 1.5rem 1.75rem;
}

.main-btn:hover {
  scale: 0.97;
  --x: 100%;
  background: var(--bg);
  color: var(--bgHeader) !important;
  border: 1px solid var(--color2);
}

.lh-base {
  text-align: justify;
  text-justify: inter-word;
}

button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  border: none;
  color: white !important;
}

button span:first-child {
  display: inline-block;
  width: 30px;
  height: 30px;
  position: relative;
  border-radius: 50%;
  background-color: var(--bg);
  text-align: center;
  // line-height: 30px;
  margin-right: 5px;
  box-shadow: 3px 3px 6px var(--border1);
}

button span svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.image {
  transform: scaleX(-1);
}

.text-lg-end {
  margin-top: 5rem;
}

.img-fluid {
  position: absolute;
  top: -4dvw;
  right: 4dvw;
  transform: translateX(8%);
  z-index: 1;
}

.text {
  position: relative;
  letter-spacing: 0.5px;
}

.text h3:first-of-type {
  margin-bottom: 0;
}

.shape {
  position: relative;
  width: 70px;
}

.shape svg {
  position: absolute;
  top: -5rem;
  left: 0;
  transform: translate(150%, -50%);
  opacity: 0.3;
}

.svg-1 {
  /* min-height: 69.25dvh; */
  width: 100%;
}

/* .shape2 {
  position: relative;
  width: 150px;
} */

.shape2 svg {
  position: absolute;
  top: 65%;
  right: 0;
  width: 75px;
  transform: translate(-50%, 20%);
  opacity: 0.5;
}

.flipped {
  flex-direction: row-reverse;
}

.flipped>span:first-child {
  margin-right: 16px;
}

@media (max-width: 990px) {
  .flex {
    flex-direction: column;
  }

  .shape2 {
    opacity: 0;
  }
}

@media (min-width: 990px) {}

text {
  margin-top: 50rem;
}

@keyframes anim {

  0%,
  100% {
    filter: drop-shadow(-1rem -1rem 2rem var(--color1) inset, 1rem 1rem 2rem var(--color2) inset);
    -webkit-filter: drop-shadow(-1rem -1rem 2rem var(--color1) inset, 1rem 1rem 2rem var(--color2) inset);
  }

  25% {
    filter: drop-shadow(1rem 1rem 2rem var(--color1) inset, -1rem -1rem 2rem var(--color2) inset);
  }

  50% {
    filter: drop-shadow(1rem 1rem 2rem var(--color1) inset, -1rem -1rem 2rem var(--color2) inset);
  }

  75% {
    filter: drop-shadow(1rem 1rem 2rem var(--color1) inset, -1rem -1rem 2rem var(--color2) inset);
  }
}
